{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","components/Tags.tsx","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/layout/Page.tsx","components/TokenInput/TokenInput.tsx","hooks/useBlock.ts","contexts/RefreshContext.tsx","contexts/BlockContext.tsx","hooks/useRefresh.ts","config/index.ts","components/UnlockButton.tsx","config/constants/ifo.ts","config/constants/index.ts","components/layout/Container.tsx","hooks/useApprove.ts","hooks/useHarvest.ts","components/Input/Input.tsx","config/constants/types.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","components/layout/Flex.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/Input/index.ts","state/actions.ts","utils/callHelpers.ts","utils/addressHelpers.ts","utils/multicall.ts","config/constants/contracts.ts","config/constants/pools.ts","utils/formatBalance.ts","config/constants/farms.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSalsaTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Salsa.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/hooks.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/web3.ts"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","Page","styled","Container","theme","mediaQueries","sm","lg","StyledTokenInput","StyledSpacer","props","spacing","StyledTokenAdornmentWrapper","StyledMaxText","colors","primary","StyledTokenSymbol","span","TokenInput","max","symbol","onChange","onSelectMax","value","TranslateString","useI18n","toLocaleString","Input","endAdornment","size","onClick","placeholder","useBlock","useContext","BlockContext","RefreshContext","React","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","useRefresh","fastRefresh","slowRefresh","config","EXPONENTIAL_AT","DECIMAL_PLACES","KIWI_PER_BLOCK","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","KIWI_POOL_PID","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","ifos","id","isActive","subTitle","description","launchDate","launchTime","saleAmount","raiseAmount","kiwiToBurn","projectSiteUrl","currency","currencyAddress","releaseBlockNumber","communityFarms","filter","isCommunity","tokenSymbol","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","useSalsaApprove","salsaId","salsaChefContract","useSalsaChef","updateUserAllowance","useLotteryApprove","kiwiContract","useKiwi","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","methods","ethers","constants","MaxUint256","send","from","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","useSalsaHarvest","isUsingBnb","handleHarvest","salsahHarvestBnb","salsahHarvest","updateUserPendingReward","updateUserBalance","StyledInputWrapper","input","radii","default","StyledInput","startAdornment","QuoteToken","PoolCategory","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","setweb3","useContract","abi","contractOptions","Contract","contract","setContract","useIfoContract","ifo","useERC20","getKiwiAddress","lottery","getLotteryAddress","useLotteryTicket","lotteryTicket","getLotteryTicketAddress","masterChef","poolsConfig","pool","rawAbi","poolCategory","BINANCE","salsaChefBnb","salsaChef","contractAddress","FlexLayout","useSalsaStake","handleStake","amount","stake","salsaStakeBnb","salsaStake","updateUserStakedBalance","onStake","useStake","console","SALSAIDS","useSalsaUnstake","isOldSalsa","onUnstake","unstake","salsaEmegencyUnstake","salsaUnstake","useUnstake","options","enterStaking","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","addresses","kiwi","chainId","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","lotteryNFT","multi","MultiCallAbi","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","aggregate","returnData","res","i","decodeFunctionResult","97","56","salsa","busd","chs","pup","mango","hots","kp3rb","usdt","usdc","dai","xchs","butt","chsbnb","kiwiRabbits","pools","tokenName","earnToken","stakingTokenName","KIWI","stakingTokenAddress","CORE","projectLink","tokenPerBlock","sortOrder","isFinished","BUTT","CHSBNB","getBalanceNumber","balance","decimals","displayBalance","dividedBy","toNumber","getFullDisplayBalance","toFixed","lpSymbol","quoteTokenSymbol","BNB","contracts","MANGO","BUSD","USDT","USDC","CHS","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","salsaChefABI","starts","ends","kiwiPoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","kiwiABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingKiwi","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECT_ID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","icon","href","items","Menu","kiwiPriceUsd","usePriceKiwiBusd","login","logout","currentLang","langs","setLang","links","Wrapper","PageLoader","Card","card","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","style","padding","role","aria-label","src","width","height","alt","as","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","ModalActions","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","Title","ActionLink","OldSalsaTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","apy","stakingLimit","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","Math","SALSA","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","Hero","Farm","path","useFarms","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","stakingTokenFarm","s","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","totalStakingTokenInPool","partition","finishedPools","openPools","Divider","Flex","exact","orderBy","Home","lazy","Farms","Lottery","Ifos","NotFound","App","window","useFetchPublicData","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","ZERO","useSelector","useFarmFromPid","useFarmFromSymbol","useFarmUser","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","getContract"],"mappings":"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","file":"static/js/main.d7fab546.chunk.js","sourcesContent":["import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@kiwifinancebsc/uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingKiwi',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@kiwifinancebsc/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const KIWI_PER_BLOCK = new BigNumber(0.020)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const KIWI_POOL_PID = 1\n","import React from 'react'\nimport { Button, useWalletModal } from '@kiwifinancebsc/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'IFO',\n    address: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    isActive: true,\n    name: 'XXXXX',\n    subTitle: 'KiwiFinance - The Best Modern Yield Farm on Binance Smart Chain',\n    description:\n      'KiwiFinance - The Best Modern Yield Farm on Binance Smart Chain.',\n    launchDate: 'Feb. 30',\n    launchTime: '8AM UTC',\n    saleAmount: '1,000,000 XXX',\n    raiseAmount: '$000,000',\n    kiwiToBurn: '$000,000',\n    projectSiteUrl: 'https://kiwifinance.app/',\n    currency: 'KIWI-BNB LP',\n    currencyAddress: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    tokenDecimals: 18,\n    releaseBlockNumber: 4086064,\n  },\n]\n\nexport default ifos\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useKiwi, useSalsaChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSalsaApprove = (lpContract: Contract, salsaId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const salsaChefContract = useSalsaChef(salsaId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, salsaChefContract, account)\n      dispatch(updateUserAllowance(salsaId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, salsaChefContract, salsaId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const kiwiContract = useKiwi()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(kiwiContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, kiwiContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { salsahHarvest, salsahHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSalsaChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSalsaHarvest = (salsaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const salsaChefContract = useSalsaChef(salsaId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (salsaId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await salsahHarvestBnb(salsaChefContract, account)\n    } else {\n      await salsahHarvest(salsaChefContract, account)\n    }\n    dispatch(updateUserPendingReward(salsaId, account))\n    dispatch(updateUserBalance(salsaId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, salsaChefContract, salsaId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  kiwiToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'KIWI' = 'KIWI',\n  'CHS' = 'CHS',\n  'USDT' = 'USDT',\n  'BUSD' = 'BUSD',\n  'HOTS' = 'HOTS',\n  'KP3RB' = 'KP3RB',\n  'SALSA' = 'SALSA',\n  'DAI' = 'DAI',\n  'ETH' = 'ETH',\n  'USDC' = 'USDC',\n  'CAKE' = 'CAKE',\n  'XCHS' = 'XCHS',\n  'cKIWI' = 'cKIWI',\n  'BUTT' = 'BUTT',\n  'CHSBNB' = 'CHSBNB',\n  'PUP' = 'PUP',\n  'MANGO' = 'MANGO',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  tokenDecimal?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  salsaId: number\n  image?: string\n  tokenName: string\n  earnToken: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getKiwiAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport kiwiRabbits from 'config/abi/kiwiRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport salsaChef from 'config/abi/salsaChef.json'\nimport salsaChefBnb from 'config/abi/salsaChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useKiwi = () => {\n  return useERC20(getKiwiAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const useKiwiRabbits = (address: string) => {\n  const kiwiRabbitsAbi = (kiwiRabbits as unknown) as AbiItem\n  return useContract(kiwiRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSalsaChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.salsaId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? salsaChefBnb : salsaChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, salsaStake, salsaStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSalsaChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSalsaStake = (salsaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const salsaChefContract = useSalsaChef(salsaId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (salsaId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await salsaStakeBnb(salsaChefContract, amount, account)\n      } else {\n        await salsaStake(salsaChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(salsaId, account))\n      dispatch(updateUserBalance(salsaId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, salsaChefContract, salsaId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, salsaUnstake, salsaEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSalsaChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SALSAIDS = [1]\n\nexport const useSalsaUnstake = (salsaId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const salsaChefContract = useSalsaChef(salsaId)\n  const isOldSalsa = SALSAIDS.includes(salsaId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (salsaId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSalsa) {\n        const txHash = await salsaEmegencyUnstake(salsaChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await salsaUnstake(salsaChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(salsaId, account))\n      dispatch(updateUserBalance(salsaId, account))\n      dispatch(updateUserPendingReward(salsaId, account))\n    },\n    [account, dispatch, isOldSalsa, masterChefContract, salsaChefContract, salsaId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","export { default } from './Input'\nexport type { InputProps } from './Input'\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsaStake = async (salsaChefContract, amount, account) => {\n  return salsaChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsaStakeBnb = async (salsaChefContract, amount, account) => {\n  return salsaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsaUnstake = async (salsaChefContract, amount, account) => {\n  if (salsaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return salsaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (salsaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return salsaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return salsaChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsaEmegencyUnstake = async (salsaChefContract, amount, account) => {\n  return salsaChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsahHarvest = async (salsaChefContract, account) => {\n  return salsaChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const salsahHarvestBnb = async (salsaChefContract, account) => {\n  return salsaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getKiwiAddress = () => {\n  return addresses.kiwi[chainId]\n}\nexport const getSalsaAddress = () => {\n  return addresses.salsa[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  kiwi: {\n    97: '',\n    56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n  },\n  salsa: {\n    97: '',\n    56: '0x75A26B9EfD0a5BD1A73bCc791Ac14B818E11758E',\n  },\n  masterChef: {\n    97: '',\n    56: '0x2fE9263BF105095e16167C093C4d28140e936E1b',\n  },\n  salsaChef: {\n    97: '',\n    56: '',\n  },\n  wbnb: {\n    97: '',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '',\n    56: '0xbBC1779d0036928F8466c72Cd6b56581C2026bf7',\n  },\n  lotteryNFT: {\n    97: '',\n    56: '0x0E3F81D423fAd309798FFfeBd41b1950966b6e1f',\n  },\n  mulltiCall: {\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n    97: '',\n  },\n  busd: {\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '',\n  },\n  chs: {\n    56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n    97: '',\n  },\n    pup: {\n    56: '0x74E39070a40ce9eD64dC60CE51127b9394711EE2',\n    97: '',\n  },\n  \n    mango: {\n    56: '0x3D29cdB00CB183a0aEcEEa4fB73F55E1450af3d4',\n    97: '',\n  },\n  \n  hots: {\n    56: '0x793766efcA4CEF8c55EE950E759AD6FF73D49c09',\n    97: '',\n  },\n  kp3rb: {\n    56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059fF775485246999027B3197955',\n    97: '',\n  },\n   usdc: {\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    97: '',\n  },\n   dai: {\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    97: '',\n  },\n  eth: {\n   56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n   97: '',\n   },\n  xchs: {\n   56: '0x9f51CAA2A1D1663fCa5bEFbFaf6C8acD8Ac9717a',\n   97: '',\n    },\n  butt: {\n   56: '0x0bC907e26377f7E072D27d7c57e72e13fc343AbC',\n   97: '',\n    },\n  chsbnb: {\n   56: '0x51A162dd678d75C269Ef6680193C019e0B4Bda7E',\n   97: '',\n    },\n\n  kiwiRabbits: {\n    56: '',\n    97: '',\n  },\n  ifo: {\n    56: '',\n    97: '',\n  },\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    salsaId: 0,\n    tokenName: 'KIWI',\n    earnToken: 'KIWI',\n    stakingTokenName: QuoteToken.KIWI,\n    stakingTokenAddress: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    contractAddress: {\n      97: '',\n      56: '0x2fE9263BF105095e16167C093C4d28140e936E1b',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'http://kiwiswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10.0',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n salsaId: 1,\n tokenName: 'BUTT',\n earnToken: 'KIWI',\n stakingTokenName: QuoteToken.BUTT,\n stakingTokenAddress: '0x0bC907e26377f7E072D27d7c57e72e13fc343AbC',    //\n contractAddress: {\n   97: '',\n   56: '0x68e4AD5C668A2aC2AA6BC5A1AFd3d18a064c34d8',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://cheeseswap.app/',\n harvest: true,\n tokenPerBlock: '1.7',\n sortOrder: 2,\n isFinished: false,\n tokenDecimals: 18,\n},\n{\nsalsaId: 2,\ntokenName: 'CHSBNB',\nearnToken: 'KIWI',\nstakingTokenName: QuoteToken.CHSBNB,\nstakingTokenAddress: '0x51A162dd678d75C269Ef6680193C019e0B4Bda7E',    //\ncontractAddress: {\n 97: '',\n 56: '0x0E493C858b9075325b85971F6c1240949cFff300',\n},\npoolCategory: PoolCategory.CORE,\nprojectLink: 'https://cheeseswap.app/',\nharvest: true,\ntokenPerBlock: '1.0',\nsortOrder: 2,\nisFinished: false,\ntokenDecimals: 18,\n},\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'KIWI',\n    lpAddresses: {\n      97: '',\n      56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    },\n    tokenSymbol: 'SALSA',\n    tokenAddresses: {\n      97: '',\n      56: '0x75A26B9EfD0a5BD1A73bCc791Ac14B818E11758E',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'KIWI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDf8481f4ffb688d940f59F839c2613cc6C40a79E',\n    },\n    tokenSymbol: 'KIWI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'PUP-MANGO LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8E1D5fD5c3c390877615366398bF8B1C85dE8ACd',\n    },\n    tokenSymbol: 'KIWI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    },\n    quoteTokenSymbol: QuoteToken.MANGO,\n    quoteTokenAdresses: contracts.mango,\n  },\n  \n  {\n    pid: 2,\n    lpSymbol: 'KIWI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6254C5be216B7E17ff27E82d06e96BAdF799885B',\n    },\n    tokenSymbol: 'KIWI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    isCommunity: false,\n  },\n  {\n   pid: 3,\n   lpSymbol: 'KIWI-USDT LP',\n   lpAddresses: {\n     97: '',\n     56: '0xab2c09F73FB62B033C6B5CfDb929C422033B0619',\n   },\n   tokenSymbol: 'KIWI',\n   tokenAddresses: {\n     97: '',\n     56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n   },\n   quoteTokenSymbol: QuoteToken.USDT,\n   quoteTokenAdresses: contracts.usdt,\n   isCommunity: false,\n },\n {\n  pid: 4,\n  lpSymbol: 'KIWI-USDC LP',\n  lpAddresses: {\n    97: '',\n    56: '0xaC8532CD60CF37440e00c86c0EFDe31C1Dbcf099',\n  },\n  tokenSymbol: 'KIWI',\n  tokenAddresses: {\n    97: '',\n    56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n  },\n  quoteTokenSymbol: QuoteToken.USDC,\n  quoteTokenAdresses: contracts.usdc,\n  isCommunity: false,\n},\n{\n    pid: 6,\n    lpSymbol: 'KIWI-CHS LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF5Cfb60d7265f423736cF69b20953AC745d8d223',\n    },\n    tokenSymbol: 'KIWI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCfDf8A80fECAeeCC144fa74c0Df8691BFd0e26e3',\n    },\n    quoteTokenSymbol: QuoteToken.CHS,\n    quoteTokenAdresses: contracts.chs,\n  },\n  {\n      pid: 5,\n      lpSymbol: 'USDT-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0xcfD63197d764cd70d07bB607e6367Ae0E869BaDD',\n      },\n      tokenSymbol: 'USDT',\n      tokenAddresses: {\n        97: '',\n        56: '0x55d398326f99059fF775485246999027B3197955',\n      },\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n]\n\nexport default farms\n","import poolsConfig from 'config/constants/pools'\nimport salsaChefABI from 'config/abi/salsaChef.json'\nimport kiwiABI from 'config/abi/kiwi.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.salsaId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(salsaChefABI, callsStartBlock)\n  const ends = await multicall(salsaChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((kiwiPoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      salsaId: kiwiPoolConfig.salsaId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(kiwiABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      salsaId: p.salsaId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      salsaId: p.salsaId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport salsaChefABI from 'config/abi/salsaChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Kiwi / Kiwi is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.salsaId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.salsaId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.salsaId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.salsaId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(salsaChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.salsaId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Kiwi / Kiwi pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(salsaChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.salsaId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Kiwi / Kiwi pool\n  const pendingReward = await masterChefContract.methods.pendingKiwi('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.salsaId === pool.salsaId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.salsaId === pool.salsaId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, salsaId } = action.payload\n      const index = state.data.findIndex((p) => p.salsaId === salsaId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.salsaId === pool.salsaId)\n    const totalStaking = totalStakings.find((entry) => entry.salsaId === pool.salsaId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    salsaId: pool.salsaId,\n    allowance: allowances[pool.salsaId],\n    stakingTokenBalance: stakingTokenBalances[pool.salsaId],\n    stakedBalance: stakedBalances[pool.salsaId],\n    pendingReward: pendingRewards[pool.salsaId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (salsaId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ salsaId, field: 'allowance', value: allowances[salsaId] }))\n}\n\nexport const updateUserBalance = (salsaId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ salsaId, field: 'stakingTokenBalance', value: tokenBalances[salsaId] }))\n}\n\nexport const updateUserStakedBalance = (salsaId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ salsaId, field: 'stakedBalance', value: stakedBalances[salsaId] }))\n}\n\nexport const updateUserPendingReward = (salsaId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ salsaId, field: 'pendingReward', value: pendingRewards[salsaId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { KiwiTheme } from '@kiwifinancebsc/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends KiwiTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Nunito Sans', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'kiwiSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECT_ID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@kiwifinancebsc/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@kiwifinancebsc/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://cheeseswap.app/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://cheeseswap.app/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://info.cheeseswap.app',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://info.cheeseswap.app/token/0xcfdf8a80fecaeecc144fa74c0df8691bfd0e26e3',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://info.cheeseswap.app/pair/0xdf8481f4ffb688d940f59f839c2613cc6c40a79e',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://info.cheeseswap.app/accounts',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/kiwifinance',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@kiwifinancebsc/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceKiwiBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const kiwiPriceUsd = usePriceKiwiBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      kiwiPriceUsd={kiwiPriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@kiwifinancebsc/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 0px 10px rgb(75, 77, 80, 0.1);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 0px 10px rgb(75, 77, 80, 0.1)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@kiwifinancebsc/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>...</Balance>\n        <Label>{TranslateString(416, 'Create a Staking pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"#\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          <Value>..</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"salsa\">\n              🥝{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value> ... KIWI</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@kiwifinancebsc/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@kiwifinancebsc/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@kiwifinancebsc/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@kiwifinancebsc/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  earnToken?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, earnToken = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${earnToken} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-kiwi\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSalsaTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink href=\"/\" target=\"_blank\">\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSalsaTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#2ab770` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#2ab770` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  tokenName: string\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  tokenName,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"salsa\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total Stake of')} {tokenName}:\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End Block of Stake')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@kiwifinancebsc/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSalsaApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSalsaStake } from 'hooks/useStake'\nimport { useSalsaUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSalsaHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSalsaTitle from './OldSalsaTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    salsaId,\n    image,\n    tokenName,\n    earnToken,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSalsaApprove(stakingTokenContract, salsaId)\n  const { onStake } = useSalsaStake(salsaId, isBnbPool)\n  const { onUnstake } = useSalsaUnstake(salsaId)\n  const { onReward } = useSalsaHarvest(salsaId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSalsa = stakingTokenName === QuoteToken.SALSA\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && salsaId !== 0}>\n      {isFinished && salsaId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && salsaId !== 0}>\n          {isOldSalsa && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSalsa && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSalsa ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {salsaId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSalsaTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && salsaId !== 0} text={TranslateString(330, `${earnToken} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSalsa ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSalsa\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSalsa && (\n                  <IconButton disabled={isFinished && salsaId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          {isFinished || isOldSalsa || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n               {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        tokenName={tokenName}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@kiwifinancebsc/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1.7px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@kiwifinancebsc/uikit'\nimport { BLOCKS_PER_YEAR, KIWI_PER_BLOCK } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.USDT) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(KIWI_PER_BLOCK).times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.salsaId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SMART Pool')}\n          </Heading>\n          <Heading as=\"h4\" size=\"l\" mb=\"14px\">\n            {TranslateString(282, 'KIWI Smart Staking Pool')}\n          </Heading>\n          <Heading as=\"h4\" size=\"l\" mb=\"14px\">\n            {TranslateString(282, 'CAUTION!!! PLEASE DO NOT SELL / MOVE YOUR EARNED #SALSA TOKEN. YOUR TRANSACTION MAY REVERT THEN.')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake KIWI or supported tokens to earn')}</li>\n            <li>{TranslateString(580, 'Any listed NEW BEP20 tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time..')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n            <li>{TranslateString(406, '______________________________________________________________')}</li>\n            <li>{TranslateString(406, 'CAUTION!: STAKING POOLS CALCULATED \"APY\" DATA IS REAL TIME AND AUTOMATICALLY COLLECTED FROM BLOCKCHAIN. DATA MAY NOT ACCURATE.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/smart-pool.svg\" alt=\"Smart Pool icon\" width={250} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.salsaId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.salsaId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@kiwifinancebsc/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\nimport Pools from './views/Pools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/salsa\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@kiwifinancebsc/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (salsaId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.salsaId === salsaId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 5 // USDT-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceKiwiBusd = (): BigNumber => {\n  const pid = 1 // KIWI-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"],"sourceRoot":""}